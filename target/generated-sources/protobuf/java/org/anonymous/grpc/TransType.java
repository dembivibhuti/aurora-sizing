// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd_trans_type.proto

package org.anonymous.grpc;

/**
 * Protobuf enum {@code org.anonymous.grpc.TransType}
 */
public enum TransType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>HEADER = 0;</code>
   */
  HEADER(0),
  /**
   * <code>INSERT = 1;</code>
   */
  INSERT(1),
  /**
   * <code>UPDATE = 2;</code>
   */
  UPDATE(2),
  /**
   * <code>RENAME = 3;</code>
   */
  RENAME(3),
  /**
   * <code>DELETE = 4;</code>
   */
  DELETE(4),
  /**
   * <code>TRAILER = 5;</code>
   */
  TRAILER(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>HEADER = 0;</code>
   */
  public static final int HEADER_VALUE = 0;
  /**
   * <code>INSERT = 1;</code>
   */
  public static final int INSERT_VALUE = 1;
  /**
   * <code>UPDATE = 2;</code>
   */
  public static final int UPDATE_VALUE = 2;
  /**
   * <code>RENAME = 3;</code>
   */
  public static final int RENAME_VALUE = 3;
  /**
   * <code>DELETE = 4;</code>
   */
  public static final int DELETE_VALUE = 4;
  /**
   * <code>TRAILER = 5;</code>
   */
  public static final int TRAILER_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static TransType valueOf(int value) {
    return forNumber(value);
  }

  public static TransType forNumber(int value) {
    switch (value) {
      case 0: return HEADER;
      case 1: return INSERT;
      case 2: return UPDATE;
      case 3: return RENAME;
      case 4: return DELETE;
      case 5: return TRAILER;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TransType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      TransType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TransType>() {
          public TransType findValueByNumber(int number) {
            return TransType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.anonymous.grpc.CmdTransType.getDescriptor().getEnumTypes().get(0);
  }

  private static final TransType[] VALUES = values();

  public static TransType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private TransType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:org.anonymous.grpc.TransType)
}

