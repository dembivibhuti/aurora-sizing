// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd_type.proto

package org.anonymous.grpc;

/**
 * Protobuf enum {@code org.anonymous.grpc.CmdType}
 */
public enum CmdType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>CMD_UNDEFINED = 0;</code>
   */
  CMD_UNDEFINED(0),
  /**
   * <code>CMD_ATTACH = 1;</code>
   */
  CMD_ATTACH(1),
  /**
   * <code>CMD_CHANGE_INIT_DATA = 2;</code>
   */
  CMD_CHANGE_INIT_DATA(2),
  /**
   * <code>CMD_GET_UNIQUE_ID = 3;</code>
   */
  CMD_GET_UNIQUE_ID(3),
  /**
   * <code>CMD_GET_BY_NAME = 4;</code>
   */
  CMD_GET_BY_NAME(4),
  /**
   * <code>CMD_GET_DISK_INFO = 5;</code>
   */
  CMD_GET_DISK_INFO(5),
  /**
   * <code>CMD_INSERT = 6;</code>
   */
  CMD_INSERT(6),
  /**
   * <code>CMD_UPDATE = 7;</code>
   */
  CMD_UPDATE(7),
  /**
   * <code>CMD_DELETE = 8;</code>
   */
  CMD_DELETE(8),
  /**
   * <code>CMD_RENAME = 9;</code>
   */
  CMD_RENAME(9),
  /**
   * <code>CMD_INCREMENTAL = 10;</code>
   */
  CMD_INCREMENTAL(10),
  /**
   * <code>CMD_NAME_LOOKUP = 11;</code>
   */
  CMD_NAME_LOOKUP(11),
  /**
   * <code>CMD_NAME_LOOKUP_BY_TYPE = 12;</code>
   */
  CMD_NAME_LOOKUP_BY_TYPE(12),
  /**
   * <code>CMD_TRANS_BEGIN = 13;</code>
   */
  CMD_TRANS_BEGIN(13),
  /**
   * <code>CMD_GET_STATISTICS = 14;</code>
   */
  CMD_GET_STATISTICS(14),
  /**
   * <code>CMD_GET_TIME = 15;</code>
   */
  CMD_GET_TIME(15),
  /**
   * <code>CMD_SET_TIME = 16;</code>
   */
  CMD_SET_TIME(16),
  /**
   * <code>CMD_INDEX_CREATE = 17;</code>
   */
  CMD_INDEX_CREATE(17),
  /**
   * <code>CMD_INDEX_DESTROY = 18;</code>
   */
  CMD_INDEX_DESTROY(18),
  /**
   * <code>CMD_INDEX_OPEN = 19;</code>
   */
  CMD_INDEX_OPEN(19),
  /**
   * <code>CMD_INDEX_CLOSE = 20;</code>
   */
  CMD_INDEX_CLOSE(20),
  /**
   * <code>CMD_INDEX_INSERT = 21;</code>
   */
  CMD_INDEX_INSERT(21),
  /**
   * <code>CMD_INDEX_DELETE = 22;</code>
   */
  CMD_INDEX_DELETE(22),
  /**
   * <code>CMD_INDEX_UPDATE = 23;</code>
   */
  CMD_INDEX_UPDATE(23),
  /**
   * <code>CMD_INDEX_RENAME = 24;</code>
   */
  CMD_INDEX_RENAME(24),
  /**
   * <code>CMD_INDEX_INCREMENTAL = 25;</code>
   */
  CMD_INDEX_INCREMENTAL(25),
  /**
   * <code>CMD_INDEX_GET = 26;</code>
   */
  CMD_INDEX_GET(26),
  /**
   * <code>CMD_DEBUG = 27;</code>
   */
  CMD_DEBUG(27),
  /**
   * <code>CMD_SYNC_POINT_SAVE = 28;</code>
   */
  CMD_SYNC_POINT_SAVE(28),
  /**
   * <code>CMD_SYNC_POINT_CLEANUP = 29;</code>
   */
  CMD_SYNC_POINT_CLEANUP(29),
  /**
   * <code>CMD_DB_VALIDATE = 30;</code>
   */
  CMD_DB_VALIDATE(30),
  /**
   * <code>CMD_GET_CONN_INFO = 31;</code>
   */
  CMD_GET_CONN_INFO(31),
  /**
   * <code>CMD_KILL_CONNECTION = 32;</code>
   */
  CMD_KILL_CONNECTION(32),
  /**
   * <code>CMD_TRANS_GET_HEAD = 33;</code>
   */
  CMD_TRANS_GET_HEAD(33),
  /**
   * <code>CMD_TRANS_GET_PARTS = 34;</code>
   */
  CMD_TRANS_GET_PARTS(34),
  /**
   * <code>CMD_TRANS_GET_STATE = 35;</code>
   */
  CMD_TRANS_GET_STATE(35),
  /**
   * <code>CMD_GET_INDEX_DESCRIPTOR = 36;</code>
   */
  CMD_GET_INDEX_DESCRIPTOR(36),
  /**
   * <code>CMD_SHUTDOWN = 37;</code>
   */
  CMD_SHUTDOWN(37),
  /**
   * <code>CMD_ERROR_LOG_GET_STATE = 38;</code>
   */
  CMD_ERROR_LOG_GET_STATE(38),
  /**
   * <code>CMD_ERROR_LOG_GET_PART = 39;</code>
   */
  CMD_ERROR_LOG_GET_PART(39),
  /**
   * <code>CMD_DB_CHECK_SUM = 40;</code>
   */
  CMD_DB_CHECK_SUM(40),
  /**
   * <code>CMD_GET_FROM_SYNCPOINT = 41;</code>
   */
  CMD_GET_FROM_SYNCPOINT(41),
  /**
   * <code>CMD_INDEX_CHECK_SUM = 42;</code>
   */
  CMD_INDEX_CHECK_SUM(42),
  /**
   * <code>CMD_TRANS_MAP = 43;</code>
   */
  CMD_TRANS_MAP(43),
  /**
   * <code>CMD_OBJECT_CHECK_SUM = 44;</code>
   */
  CMD_OBJECT_CHECK_SUM(44),
  /**
   * <code>CMD_FILE_OPEN = 45;</code>
   */
  CMD_FILE_OPEN(45),
  /**
   * <code>CMD_FILE_CLOSE = 46;</code>
   */
  CMD_FILE_CLOSE(46),
  /**
   * <code>CMD_FILE_READ = 47;</code>
   */
  CMD_FILE_READ(47),
  /**
   * <code>CMD_FILE_INFO_GET = 48;</code>
   */
  CMD_FILE_INFO_GET(48),
  /**
   * <code>CMD_SYNC_POINT_ASYNC_SAVE = 49;</code>
   */
  CMD_SYNC_POINT_ASYNC_SAVE(49),
  /**
   * <code>CMD_SYNC_POINT_ASYNC_ABORT = 50;</code>
   */
  CMD_SYNC_POINT_ASYNC_ABORT(50),
  /**
   * <code>CMD_GET_UTILIZATION = 51;</code>
   */
  CMD_GET_UTILIZATION(51),
  /**
   * <code>CMD_INDEX_GET_SECURITY = 52;</code>
   */
  CMD_INDEX_GET_SECURITY(52),
  /**
   * <code>CMD_SOURCE_INFO = 53;</code>
   */
  CMD_SOURCE_INFO(53),
  /**
   * <code>CMD_SELF_DESCRIBING = 54;</code>
   */
  CMD_SELF_DESCRIBING(54),
  /**
   * <code>CMD_INDEX_GET_BY_NAME = 55;</code>
   */
  CMD_INDEX_GET_BY_NAME(55),
  /**
   * <code>CMD_COLLECT_CLIENT_STATS = 56;</code>
   */
  CMD_COLLECT_CLIENT_STATS(56),
  /**
   * <code>CMD_INDEX_GET_MANY = 57;</code>
   */
  CMD_INDEX_GET_MANY(57),
  /**
   * <code>CMD_GET_MANY_BY_NAME = 58;</code>
   */
  CMD_GET_MANY_BY_NAME(58),
  /**
   * <code>CMD_GET_CONFIGS = 59;</code>
   */
  CMD_GET_CONFIGS(59),
  /**
   * <code>CMD_SET_CONFIG = 60;</code>
   */
  CMD_SET_CONFIG(60),
  /**
   * <code>CMD_TRANS_GET_MANY = 61;</code>
   */
  CMD_TRANS_GET_MANY(61),
  /**
   * <code>CMD_DEBUG_LRU = 62;</code>
   */
  CMD_DEBUG_LRU(62),
  /**
   * <code>CMD_MAX_TRANSATION_ID_MAP_GET = 63;</code>
   */
  CMD_MAX_TRANSATION_ID_MAP_GET(63),
  /**
   * <code>CMD_TRANS_GET_PARTS_MANY_INIT = 64;</code>
   */
  CMD_TRANS_GET_PARTS_MANY_INIT(64),
  /**
   * <code>CMD_TRANS_COMMIT_MANY_INIT = 65;</code>
   */
  CMD_TRANS_COMMIT_MANY_INIT(65),
  /**
   * <code>CMD_TRANS_COMMIT_MANY_SYNC = 66;</code>
   */
  CMD_TRANS_COMMIT_MANY_SYNC(66),
  /**
   * <code>CMD_GET_AGGREGATE_DETAIL = 67;</code>
   */
  CMD_GET_AGGREGATE_DETAIL(67),
  /**
   * <code>CMD_GET_DISK_INFO_MANY = 68;</code>
   */
  CMD_GET_DISK_INFO_MANY(68),
  /**
   * <code>CMD_INDEX_GET_BY_NAME_MANY = 69;</code>
   */
  CMD_INDEX_GET_BY_NAME_MANY(69),
  /**
   * <code>CMD_SUBSCRIBE_POSITION_UPDATE = 70;</code>
   */
  CMD_SUBSCRIBE_POSITION_UPDATE(70),
  /**
   * <code>CMD_SERVER_INFO = 71;</code>
   */
  CMD_SERVER_INFO(71),
  /**
   * <code>CMD_GET_UNIQUE_ID64 = 72;</code>
   */
  CMD_GET_UNIQUE_ID64(72),
  /**
   * <code>CMD_IDS_CREATE = 73;</code>
   */
  CMD_IDS_CREATE(73),
  /**
   * <code>CMD_IDS_DESTROY = 74;</code>
   */
  CMD_IDS_DESTROY(74),
  /**
   * <code>CMD_IDS_INFO = 75;</code>
   */
  CMD_IDS_INFO(75),
  /**
   * <code>CMD_IDS_LIST = 76;</code>
   */
  CMD_IDS_LIST(76),
  /**
   * <code>CMD_IDS_INDEX_CREATE = 77;</code>
   */
  CMD_IDS_INDEX_CREATE(77),
  /**
   * <code>CMD_IDS_INDEX_INFO = 78;</code>
   */
  CMD_IDS_INDEX_INFO(78),
  /**
   * <code>CMD_IDS_INDEX_LIST = 79;</code>
   */
  CMD_IDS_INDEX_LIST(79),
  /**
   * <code>CMD_IDS_GET_BY_NAME = 80;</code>
   */
  CMD_IDS_GET_BY_NAME(80),
  /**
   * <code>CMD_IDS_GET_BY_NAME_MANY = 81;</code>
   */
  CMD_IDS_GET_BY_NAME_MANY(81),
  /**
   * <code>CMD_IDS_QUERY = 82;</code>
   */
  CMD_IDS_QUERY(82),
  /**
   * <code>CMD_SERVER_ADMIN = 83;</code>
   */
  CMD_SERVER_ADMIN(83),
  /**
   * <code>CMD_GET_BY_NAME_MANY_EXT = 84;</code>
   */
  CMD_GET_BY_NAME_MANY_EXT(84),
  /**
   * <code>CMD_POSITION_QUERY = 85;</code>
   */
  CMD_POSITION_QUERY(85),
  /**
   * <code>CMD_ATTACH_EXT = 86;</code>
   */
  CMD_ATTACH_EXT(86),
  /**
   * <code>CMD_END_OF_TABLE_MARKER = 87;</code>
   */
  CMD_END_OF_TABLE_MARKER(87),
  /**
   * <code>CMD_ADMIN_ATTACH = 88;</code>
   */
  CMD_ADMIN_ATTACH(88),
  /**
   * <code>CMD_ADMIN_CONN_INFO = 89;</code>
   */
  CMD_ADMIN_CONN_INFO(89),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>CMD_UNDEFINED = 0;</code>
   */
  public static final int CMD_UNDEFINED_VALUE = 0;
  /**
   * <code>CMD_ATTACH = 1;</code>
   */
  public static final int CMD_ATTACH_VALUE = 1;
  /**
   * <code>CMD_CHANGE_INIT_DATA = 2;</code>
   */
  public static final int CMD_CHANGE_INIT_DATA_VALUE = 2;
  /**
   * <code>CMD_GET_UNIQUE_ID = 3;</code>
   */
  public static final int CMD_GET_UNIQUE_ID_VALUE = 3;
  /**
   * <code>CMD_GET_BY_NAME = 4;</code>
   */
  public static final int CMD_GET_BY_NAME_VALUE = 4;
  /**
   * <code>CMD_GET_DISK_INFO = 5;</code>
   */
  public static final int CMD_GET_DISK_INFO_VALUE = 5;
  /**
   * <code>CMD_INSERT = 6;</code>
   */
  public static final int CMD_INSERT_VALUE = 6;
  /**
   * <code>CMD_UPDATE = 7;</code>
   */
  public static final int CMD_UPDATE_VALUE = 7;
  /**
   * <code>CMD_DELETE = 8;</code>
   */
  public static final int CMD_DELETE_VALUE = 8;
  /**
   * <code>CMD_RENAME = 9;</code>
   */
  public static final int CMD_RENAME_VALUE = 9;
  /**
   * <code>CMD_INCREMENTAL = 10;</code>
   */
  public static final int CMD_INCREMENTAL_VALUE = 10;
  /**
   * <code>CMD_NAME_LOOKUP = 11;</code>
   */
  public static final int CMD_NAME_LOOKUP_VALUE = 11;
  /**
   * <code>CMD_NAME_LOOKUP_BY_TYPE = 12;</code>
   */
  public static final int CMD_NAME_LOOKUP_BY_TYPE_VALUE = 12;
  /**
   * <code>CMD_TRANS_BEGIN = 13;</code>
   */
  public static final int CMD_TRANS_BEGIN_VALUE = 13;
  /**
   * <code>CMD_GET_STATISTICS = 14;</code>
   */
  public static final int CMD_GET_STATISTICS_VALUE = 14;
  /**
   * <code>CMD_GET_TIME = 15;</code>
   */
  public static final int CMD_GET_TIME_VALUE = 15;
  /**
   * <code>CMD_SET_TIME = 16;</code>
   */
  public static final int CMD_SET_TIME_VALUE = 16;
  /**
   * <code>CMD_INDEX_CREATE = 17;</code>
   */
  public static final int CMD_INDEX_CREATE_VALUE = 17;
  /**
   * <code>CMD_INDEX_DESTROY = 18;</code>
   */
  public static final int CMD_INDEX_DESTROY_VALUE = 18;
  /**
   * <code>CMD_INDEX_OPEN = 19;</code>
   */
  public static final int CMD_INDEX_OPEN_VALUE = 19;
  /**
   * <code>CMD_INDEX_CLOSE = 20;</code>
   */
  public static final int CMD_INDEX_CLOSE_VALUE = 20;
  /**
   * <code>CMD_INDEX_INSERT = 21;</code>
   */
  public static final int CMD_INDEX_INSERT_VALUE = 21;
  /**
   * <code>CMD_INDEX_DELETE = 22;</code>
   */
  public static final int CMD_INDEX_DELETE_VALUE = 22;
  /**
   * <code>CMD_INDEX_UPDATE = 23;</code>
   */
  public static final int CMD_INDEX_UPDATE_VALUE = 23;
  /**
   * <code>CMD_INDEX_RENAME = 24;</code>
   */
  public static final int CMD_INDEX_RENAME_VALUE = 24;
  /**
   * <code>CMD_INDEX_INCREMENTAL = 25;</code>
   */
  public static final int CMD_INDEX_INCREMENTAL_VALUE = 25;
  /**
   * <code>CMD_INDEX_GET = 26;</code>
   */
  public static final int CMD_INDEX_GET_VALUE = 26;
  /**
   * <code>CMD_DEBUG = 27;</code>
   */
  public static final int CMD_DEBUG_VALUE = 27;
  /**
   * <code>CMD_SYNC_POINT_SAVE = 28;</code>
   */
  public static final int CMD_SYNC_POINT_SAVE_VALUE = 28;
  /**
   * <code>CMD_SYNC_POINT_CLEANUP = 29;</code>
   */
  public static final int CMD_SYNC_POINT_CLEANUP_VALUE = 29;
  /**
   * <code>CMD_DB_VALIDATE = 30;</code>
   */
  public static final int CMD_DB_VALIDATE_VALUE = 30;
  /**
   * <code>CMD_GET_CONN_INFO = 31;</code>
   */
  public static final int CMD_GET_CONN_INFO_VALUE = 31;
  /**
   * <code>CMD_KILL_CONNECTION = 32;</code>
   */
  public static final int CMD_KILL_CONNECTION_VALUE = 32;
  /**
   * <code>CMD_TRANS_GET_HEAD = 33;</code>
   */
  public static final int CMD_TRANS_GET_HEAD_VALUE = 33;
  /**
   * <code>CMD_TRANS_GET_PARTS = 34;</code>
   */
  public static final int CMD_TRANS_GET_PARTS_VALUE = 34;
  /**
   * <code>CMD_TRANS_GET_STATE = 35;</code>
   */
  public static final int CMD_TRANS_GET_STATE_VALUE = 35;
  /**
   * <code>CMD_GET_INDEX_DESCRIPTOR = 36;</code>
   */
  public static final int CMD_GET_INDEX_DESCRIPTOR_VALUE = 36;
  /**
   * <code>CMD_SHUTDOWN = 37;</code>
   */
  public static final int CMD_SHUTDOWN_VALUE = 37;
  /**
   * <code>CMD_ERROR_LOG_GET_STATE = 38;</code>
   */
  public static final int CMD_ERROR_LOG_GET_STATE_VALUE = 38;
  /**
   * <code>CMD_ERROR_LOG_GET_PART = 39;</code>
   */
  public static final int CMD_ERROR_LOG_GET_PART_VALUE = 39;
  /**
   * <code>CMD_DB_CHECK_SUM = 40;</code>
   */
  public static final int CMD_DB_CHECK_SUM_VALUE = 40;
  /**
   * <code>CMD_GET_FROM_SYNCPOINT = 41;</code>
   */
  public static final int CMD_GET_FROM_SYNCPOINT_VALUE = 41;
  /**
   * <code>CMD_INDEX_CHECK_SUM = 42;</code>
   */
  public static final int CMD_INDEX_CHECK_SUM_VALUE = 42;
  /**
   * <code>CMD_TRANS_MAP = 43;</code>
   */
  public static final int CMD_TRANS_MAP_VALUE = 43;
  /**
   * <code>CMD_OBJECT_CHECK_SUM = 44;</code>
   */
  public static final int CMD_OBJECT_CHECK_SUM_VALUE = 44;
  /**
   * <code>CMD_FILE_OPEN = 45;</code>
   */
  public static final int CMD_FILE_OPEN_VALUE = 45;
  /**
   * <code>CMD_FILE_CLOSE = 46;</code>
   */
  public static final int CMD_FILE_CLOSE_VALUE = 46;
  /**
   * <code>CMD_FILE_READ = 47;</code>
   */
  public static final int CMD_FILE_READ_VALUE = 47;
  /**
   * <code>CMD_FILE_INFO_GET = 48;</code>
   */
  public static final int CMD_FILE_INFO_GET_VALUE = 48;
  /**
   * <code>CMD_SYNC_POINT_ASYNC_SAVE = 49;</code>
   */
  public static final int CMD_SYNC_POINT_ASYNC_SAVE_VALUE = 49;
  /**
   * <code>CMD_SYNC_POINT_ASYNC_ABORT = 50;</code>
   */
  public static final int CMD_SYNC_POINT_ASYNC_ABORT_VALUE = 50;
  /**
   * <code>CMD_GET_UTILIZATION = 51;</code>
   */
  public static final int CMD_GET_UTILIZATION_VALUE = 51;
  /**
   * <code>CMD_INDEX_GET_SECURITY = 52;</code>
   */
  public static final int CMD_INDEX_GET_SECURITY_VALUE = 52;
  /**
   * <code>CMD_SOURCE_INFO = 53;</code>
   */
  public static final int CMD_SOURCE_INFO_VALUE = 53;
  /**
   * <code>CMD_SELF_DESCRIBING = 54;</code>
   */
  public static final int CMD_SELF_DESCRIBING_VALUE = 54;
  /**
   * <code>CMD_INDEX_GET_BY_NAME = 55;</code>
   */
  public static final int CMD_INDEX_GET_BY_NAME_VALUE = 55;
  /**
   * <code>CMD_COLLECT_CLIENT_STATS = 56;</code>
   */
  public static final int CMD_COLLECT_CLIENT_STATS_VALUE = 56;
  /**
   * <code>CMD_INDEX_GET_MANY = 57;</code>
   */
  public static final int CMD_INDEX_GET_MANY_VALUE = 57;
  /**
   * <code>CMD_GET_MANY_BY_NAME = 58;</code>
   */
  public static final int CMD_GET_MANY_BY_NAME_VALUE = 58;
  /**
   * <code>CMD_GET_CONFIGS = 59;</code>
   */
  public static final int CMD_GET_CONFIGS_VALUE = 59;
  /**
   * <code>CMD_SET_CONFIG = 60;</code>
   */
  public static final int CMD_SET_CONFIG_VALUE = 60;
  /**
   * <code>CMD_TRANS_GET_MANY = 61;</code>
   */
  public static final int CMD_TRANS_GET_MANY_VALUE = 61;
  /**
   * <code>CMD_DEBUG_LRU = 62;</code>
   */
  public static final int CMD_DEBUG_LRU_VALUE = 62;
  /**
   * <code>CMD_MAX_TRANSATION_ID_MAP_GET = 63;</code>
   */
  public static final int CMD_MAX_TRANSATION_ID_MAP_GET_VALUE = 63;
  /**
   * <code>CMD_TRANS_GET_PARTS_MANY_INIT = 64;</code>
   */
  public static final int CMD_TRANS_GET_PARTS_MANY_INIT_VALUE = 64;
  /**
   * <code>CMD_TRANS_COMMIT_MANY_INIT = 65;</code>
   */
  public static final int CMD_TRANS_COMMIT_MANY_INIT_VALUE = 65;
  /**
   * <code>CMD_TRANS_COMMIT_MANY_SYNC = 66;</code>
   */
  public static final int CMD_TRANS_COMMIT_MANY_SYNC_VALUE = 66;
  /**
   * <code>CMD_GET_AGGREGATE_DETAIL = 67;</code>
   */
  public static final int CMD_GET_AGGREGATE_DETAIL_VALUE = 67;
  /**
   * <code>CMD_GET_DISK_INFO_MANY = 68;</code>
   */
  public static final int CMD_GET_DISK_INFO_MANY_VALUE = 68;
  /**
   * <code>CMD_INDEX_GET_BY_NAME_MANY = 69;</code>
   */
  public static final int CMD_INDEX_GET_BY_NAME_MANY_VALUE = 69;
  /**
   * <code>CMD_SUBSCRIBE_POSITION_UPDATE = 70;</code>
   */
  public static final int CMD_SUBSCRIBE_POSITION_UPDATE_VALUE = 70;
  /**
   * <code>CMD_SERVER_INFO = 71;</code>
   */
  public static final int CMD_SERVER_INFO_VALUE = 71;
  /**
   * <code>CMD_GET_UNIQUE_ID64 = 72;</code>
   */
  public static final int CMD_GET_UNIQUE_ID64_VALUE = 72;
  /**
   * <code>CMD_IDS_CREATE = 73;</code>
   */
  public static final int CMD_IDS_CREATE_VALUE = 73;
  /**
   * <code>CMD_IDS_DESTROY = 74;</code>
   */
  public static final int CMD_IDS_DESTROY_VALUE = 74;
  /**
   * <code>CMD_IDS_INFO = 75;</code>
   */
  public static final int CMD_IDS_INFO_VALUE = 75;
  /**
   * <code>CMD_IDS_LIST = 76;</code>
   */
  public static final int CMD_IDS_LIST_VALUE = 76;
  /**
   * <code>CMD_IDS_INDEX_CREATE = 77;</code>
   */
  public static final int CMD_IDS_INDEX_CREATE_VALUE = 77;
  /**
   * <code>CMD_IDS_INDEX_INFO = 78;</code>
   */
  public static final int CMD_IDS_INDEX_INFO_VALUE = 78;
  /**
   * <code>CMD_IDS_INDEX_LIST = 79;</code>
   */
  public static final int CMD_IDS_INDEX_LIST_VALUE = 79;
  /**
   * <code>CMD_IDS_GET_BY_NAME = 80;</code>
   */
  public static final int CMD_IDS_GET_BY_NAME_VALUE = 80;
  /**
   * <code>CMD_IDS_GET_BY_NAME_MANY = 81;</code>
   */
  public static final int CMD_IDS_GET_BY_NAME_MANY_VALUE = 81;
  /**
   * <code>CMD_IDS_QUERY = 82;</code>
   */
  public static final int CMD_IDS_QUERY_VALUE = 82;
  /**
   * <code>CMD_SERVER_ADMIN = 83;</code>
   */
  public static final int CMD_SERVER_ADMIN_VALUE = 83;
  /**
   * <code>CMD_GET_BY_NAME_MANY_EXT = 84;</code>
   */
  public static final int CMD_GET_BY_NAME_MANY_EXT_VALUE = 84;
  /**
   * <code>CMD_POSITION_QUERY = 85;</code>
   */
  public static final int CMD_POSITION_QUERY_VALUE = 85;
  /**
   * <code>CMD_ATTACH_EXT = 86;</code>
   */
  public static final int CMD_ATTACH_EXT_VALUE = 86;
  /**
   * <code>CMD_END_OF_TABLE_MARKER = 87;</code>
   */
  public static final int CMD_END_OF_TABLE_MARKER_VALUE = 87;
  /**
   * <code>CMD_ADMIN_ATTACH = 88;</code>
   */
  public static final int CMD_ADMIN_ATTACH_VALUE = 88;
  /**
   * <code>CMD_ADMIN_CONN_INFO = 89;</code>
   */
  public static final int CMD_ADMIN_CONN_INFO_VALUE = 89;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CmdType valueOf(int value) {
    return forNumber(value);
  }

  public static CmdType forNumber(int value) {
    switch (value) {
      case 0: return CMD_UNDEFINED;
      case 1: return CMD_ATTACH;
      case 2: return CMD_CHANGE_INIT_DATA;
      case 3: return CMD_GET_UNIQUE_ID;
      case 4: return CMD_GET_BY_NAME;
      case 5: return CMD_GET_DISK_INFO;
      case 6: return CMD_INSERT;
      case 7: return CMD_UPDATE;
      case 8: return CMD_DELETE;
      case 9: return CMD_RENAME;
      case 10: return CMD_INCREMENTAL;
      case 11: return CMD_NAME_LOOKUP;
      case 12: return CMD_NAME_LOOKUP_BY_TYPE;
      case 13: return CMD_TRANS_BEGIN;
      case 14: return CMD_GET_STATISTICS;
      case 15: return CMD_GET_TIME;
      case 16: return CMD_SET_TIME;
      case 17: return CMD_INDEX_CREATE;
      case 18: return CMD_INDEX_DESTROY;
      case 19: return CMD_INDEX_OPEN;
      case 20: return CMD_INDEX_CLOSE;
      case 21: return CMD_INDEX_INSERT;
      case 22: return CMD_INDEX_DELETE;
      case 23: return CMD_INDEX_UPDATE;
      case 24: return CMD_INDEX_RENAME;
      case 25: return CMD_INDEX_INCREMENTAL;
      case 26: return CMD_INDEX_GET;
      case 27: return CMD_DEBUG;
      case 28: return CMD_SYNC_POINT_SAVE;
      case 29: return CMD_SYNC_POINT_CLEANUP;
      case 30: return CMD_DB_VALIDATE;
      case 31: return CMD_GET_CONN_INFO;
      case 32: return CMD_KILL_CONNECTION;
      case 33: return CMD_TRANS_GET_HEAD;
      case 34: return CMD_TRANS_GET_PARTS;
      case 35: return CMD_TRANS_GET_STATE;
      case 36: return CMD_GET_INDEX_DESCRIPTOR;
      case 37: return CMD_SHUTDOWN;
      case 38: return CMD_ERROR_LOG_GET_STATE;
      case 39: return CMD_ERROR_LOG_GET_PART;
      case 40: return CMD_DB_CHECK_SUM;
      case 41: return CMD_GET_FROM_SYNCPOINT;
      case 42: return CMD_INDEX_CHECK_SUM;
      case 43: return CMD_TRANS_MAP;
      case 44: return CMD_OBJECT_CHECK_SUM;
      case 45: return CMD_FILE_OPEN;
      case 46: return CMD_FILE_CLOSE;
      case 47: return CMD_FILE_READ;
      case 48: return CMD_FILE_INFO_GET;
      case 49: return CMD_SYNC_POINT_ASYNC_SAVE;
      case 50: return CMD_SYNC_POINT_ASYNC_ABORT;
      case 51: return CMD_GET_UTILIZATION;
      case 52: return CMD_INDEX_GET_SECURITY;
      case 53: return CMD_SOURCE_INFO;
      case 54: return CMD_SELF_DESCRIBING;
      case 55: return CMD_INDEX_GET_BY_NAME;
      case 56: return CMD_COLLECT_CLIENT_STATS;
      case 57: return CMD_INDEX_GET_MANY;
      case 58: return CMD_GET_MANY_BY_NAME;
      case 59: return CMD_GET_CONFIGS;
      case 60: return CMD_SET_CONFIG;
      case 61: return CMD_TRANS_GET_MANY;
      case 62: return CMD_DEBUG_LRU;
      case 63: return CMD_MAX_TRANSATION_ID_MAP_GET;
      case 64: return CMD_TRANS_GET_PARTS_MANY_INIT;
      case 65: return CMD_TRANS_COMMIT_MANY_INIT;
      case 66: return CMD_TRANS_COMMIT_MANY_SYNC;
      case 67: return CMD_GET_AGGREGATE_DETAIL;
      case 68: return CMD_GET_DISK_INFO_MANY;
      case 69: return CMD_INDEX_GET_BY_NAME_MANY;
      case 70: return CMD_SUBSCRIBE_POSITION_UPDATE;
      case 71: return CMD_SERVER_INFO;
      case 72: return CMD_GET_UNIQUE_ID64;
      case 73: return CMD_IDS_CREATE;
      case 74: return CMD_IDS_DESTROY;
      case 75: return CMD_IDS_INFO;
      case 76: return CMD_IDS_LIST;
      case 77: return CMD_IDS_INDEX_CREATE;
      case 78: return CMD_IDS_INDEX_INFO;
      case 79: return CMD_IDS_INDEX_LIST;
      case 80: return CMD_IDS_GET_BY_NAME;
      case 81: return CMD_IDS_GET_BY_NAME_MANY;
      case 82: return CMD_IDS_QUERY;
      case 83: return CMD_SERVER_ADMIN;
      case 84: return CMD_GET_BY_NAME_MANY_EXT;
      case 85: return CMD_POSITION_QUERY;
      case 86: return CMD_ATTACH_EXT;
      case 87: return CMD_END_OF_TABLE_MARKER;
      case 88: return CMD_ADMIN_ATTACH;
      case 89: return CMD_ADMIN_CONN_INFO;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CmdType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CmdType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CmdType>() {
          public CmdType findValueByNumber(int number) {
            return CmdType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.anonymous.grpc.CmdTypeOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final CmdType[] VALUES = values();

  public static CmdType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CmdType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:org.anonymous.grpc.CmdType)
}

