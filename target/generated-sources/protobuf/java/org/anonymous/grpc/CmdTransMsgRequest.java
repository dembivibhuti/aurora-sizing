// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd_trans_msg_request.proto

package org.anonymous.grpc;

public final class CmdTransMsgRequest {
  private CmdTransMsgRequest() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_anonymous_grpc_CmdTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_anonymous_grpc_CmdTransactionRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033cmd_trans_msg_request.proto\022\022org.anony" +
      "mous.grpc\032\020cmd_header.proto\032\024cmd_trans_t" +
      "ype.proto\032\020cmd_insert.proto\032\020cmd_update." +
      "proto\032\020cmd_delete.proto\032\020cmd_rename.prot" +
      "o\032\021cmd_trailer.proto\"\210\003\n\025CmdTransactionR" +
      "equest\0220\n\ttrans_seq\030\001 \001(\0162\035.org.anonymou" +
      "s.grpc.TransType\0224\n\006header\030\002 \001(\0132\".org.a" +
      "nonymous.grpc.CmdTransHeaderH\000\022/\n\006insert" +
      "\030\003 \001(\0132\035.org.anonymous.grpc.CmdInsertH\000\022" +
      "/\n\006update\030\004 \001(\0132\035.org.anonymous.grpc.Cmd" +
      "UpdateH\000\022/\n\006delete\030\005 \001(\0132\035.org.anonymous" +
      ".grpc.CmdDeleteH\000\022/\n\006rename\030\006 \001(\0132\035.org." +
      "anonymous.grpc.CmdRenameH\000\0221\n\007trailer\030\007 " +
      "\001(\0132\036.org.anonymous.grpc.CmdTrailerH\000B\020\n" +
      "\016MessageRequestB<P\001Z8github.com/somnath6" +
      "7643/aurora-sizing/clientgo/baseprotob\006p" +
      "roto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.anonymous.grpc.CmdHeader.getDescriptor(),
          org.anonymous.grpc.CmdTransType.getDescriptor(),
          org.anonymous.grpc.CmdInsertOuterClass.getDescriptor(),
          org.anonymous.grpc.CmdUpdateOuterClass.getDescriptor(),
          org.anonymous.grpc.CmdDeleteOuterClass.getDescriptor(),
          org.anonymous.grpc.CmdRenameOuterClass.getDescriptor(),
          org.anonymous.grpc.CmdTrailerOuterClass.getDescriptor(),
        }, assigner);
    internal_static_org_anonymous_grpc_CmdTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_anonymous_grpc_CmdTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_anonymous_grpc_CmdTransactionRequest_descriptor,
        new java.lang.String[] { "TransSeq", "Header", "Insert", "Update", "Delete", "Rename", "Trailer", "MessageRequest", });
    org.anonymous.grpc.CmdHeader.getDescriptor();
    org.anonymous.grpc.CmdTransType.getDescriptor();
    org.anonymous.grpc.CmdInsertOuterClass.getDescriptor();
    org.anonymous.grpc.CmdUpdateOuterClass.getDescriptor();
    org.anonymous.grpc.CmdDeleteOuterClass.getDescriptor();
    org.anonymous.grpc.CmdRenameOuterClass.getDescriptor();
    org.anonymous.grpc.CmdTrailerOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
